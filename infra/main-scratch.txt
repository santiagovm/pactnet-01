terraform {
  required_version = ">= 0.12"
}

provider "azurerm" {
  version = ">=1.29.0"
  subscription_id = "ffffffff-ffff-ffff-ffff-ffffffffffff"
  client_id       = "917aeb14-bf7f-4687-8bdb-6d2f5b972eae"
  client_secret   = "4f6833a0-afdf-498d-99f9-02d9b59a06f0"
  tenant_id       = "59297e42-ba2f-4eca-909a-bc93656bfdbc"
}

resource "random_string" "random" {
  length = 6
  special = false
  upper = false
}

resource "azurerm_virtual_network" "example" {
  name                = "${random_string.random.result}-network"
  address_space       = ["10.0.0.0/16"]
  location            = "Australia East"
  resource_group_name = "PgResourceGroup"
}

resource "azurerm_subnet" "example" {
  name                 = "${random_string.random.result}-subnet"
  resource_group_name  = "PgResourceGroup"
  virtual_network_name = azurerm_virtual_network.example.name
  address_prefix       = "10.0.1.0/24"

  enforce_private_link_endpoint_network_policies = true
}

resource "azurerm_postgresql_server" "postgres_server" {
  name = "postgres_server"
  location = "eastus2"
  resource_group_name  = azurerm_resource_group.pact-broker-rg.name
  
  sku_name = "B_Gen5_1"

  storage_profile {
    storage_mb            = 5120
    backup_retention_days = 7
    geo_redundant_backup  = "Disabled"
    auto_grow             = "Enabled"
  }

  administrator_login = "value"
  administrator_login_password = "value"
  version = "11"
  ssl_enforcement_enabled = true
}

resource "azurerm_postgresql_server" "example" {
  name                = "${random_string.random.result}-postgresql"
  location            = "Australia East"
  resource_group_name = "PgResourceGroup"

  sku_name = "GP_Gen5_2"

  storage_profile {
    storage_mb            = 51200
    backup_retention_days = 7
    geo_redundant_backup  = "Disabled"
    auto_grow             = "Enabled"
  }

  administrator_login          = "psqladmin"
  administrator_login_password = "H@Sh1CoR3!"
  version                      = "11"
  ssl_enforcement              = "Enabled"
}

resource "azurerm_private_endpoint" "example" {
  name                = "${random_string.random.result}-endpoint"
  location            = "Australia East"
  resource_group_name = "PgResourceGroup"
  subnet_id           = azurerm_subnet.example.id

  private_service_connection {
    name                           = "${random_string.random.result}-privateserviceconnection"
    private_connection_resource_id = azurerm_postgresql_server.example.id
    subresource_names              = [ "postgresqlServer" ]
    is_manual_connection           = false
  }
}