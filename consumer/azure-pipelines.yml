trigger:
  batch: true
  branches:
    include:
    - main
  paths:
    include:
    - consumer

resources:
  containers:
    - container: pact_cli
      image: pactfoundation/pact-cli:latest

pool:
    vmImage: ubuntu-latest

stages:
- stage: build

  jobs:
  - job: test
    steps:
      # - task: DotNetCoreCLI@2
      #   displayName: dotnet build
      #   inputs:
      #     command: build
      #     arguments: 'consumer/consumer/consumer.csproj --configuration Release'
      - task: DotNetCoreCLI@2
        displayName: dotnet test
        inputs:
          command: test
          arguments: 'consumer/Consumer.Test.NUnit/Consumer.Test.NUnit.csproj --configuration Release'
      - publish: 'consumer/Consumer.Test.NUnit/pacts'
        artifact: pacts
        displayName: create pacts artifact

      # - task: DotNetCoreCLI@2
      #   displayName: publish
      #   inputs:
      #     command: publish
      #     projects: consumer/consumer/consumer.csproj
      #     arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'

  - job: publish_pacts
    displayName: publish pacts
    services:
      pact_cli: pact_cli
    variables:
        GIT_COMMIT_SHORT_SHA: value-set-below
    steps:
      - download: current
        artifact: pacts
        displayName: get pacts artifact
      - script: |
          ls $(Pipeline.Workspace)/pacts
        displayName: list pacts
      - script: |
          sourceVersion=$(Build.SourceVersion)
          echo sourceVersion: $sourceVersion

          shortSha=${sourceVersion:0:7}
          echo shortSha: $shortSha

          echo "##vso[task.setvariable variable=GIT_COMMIT_SHORT_SHA]$shortSha"
        displayName: set publish variables
      - script: |
          docker run --rm \
            --volume $(Pipeline.Workspace)/pacts:/pacts \
            pactfoundation/pact-cli:latest \
            broker publish /pacts \
            --consumer-app-version=$GIT_COMMIT_SHORT_SHA \
            --tag=$(Build.SourceBranch) \
            --broker-base-url=$PACT_BROKER_BASE_URL \
            --broker-token=$PACT_BROKER_API_TOKEN
        displayName: pact-broker publish
        env:
          PACT_BROKER_BASE_URL: $(pact.broker.base.url)
          PACT_BROKER_API_TOKEN: $(pact.broker.api.token)

  - job: check_pacts
    displayName: check pacts
    services:
      pact_cli: pact_cli
    steps:
      - script: |
          docker run --rm \
            pactfoundation/pact-cli:latest \
            broker can-i-deploy \
            --participant "My Consumer NUnit" \
            --version $GIT_COMMIT_SHORT_SHA \
            --to dev \
            --broker-base-url=$PACT_BROKER_BASE_URL \
            --broker-token=$PACT_BROKER_API_TOKEN \
            --retry-while-unknown 2 \
            --retry-interval 30 \
            --verbose
        displayName: pact-broker can-i-deploy
        env:
          PACT_BROKER_BASE_URL: $(pact.broker.base.url)
          PACT_BROKER_API_TOKEN: $(pact.broker.api.token)