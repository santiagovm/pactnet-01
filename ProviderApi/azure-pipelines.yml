trigger:
  batch: true
  branches:
    include:
    - main
  paths:
    include:
    - ProviderApi

resources:
  containers:
    - container: pact_cli
      image: pactfoundation/pact-cli:latest

pool:
    vmImage: ubuntu-latest
    
variables:
- group: pactflow-variables

stages:
- stage: dev
  displayName: dev environment

  jobs:
  - job: santi_test_1
    displayName: santi test 1
    steps:
      - script: |
          sourceVersion=$(Build.SourceVersion)
          echo sourceVersion: $sourceVersion

          shortSha=${sourceVersion:0:7}
          echo shortSha: $shortSha

          echo "##vso[task.setvariable variable=SANTI_GIT_COMMIT_SHORT_SHA;isOutput=true;]$shortSha"
        displayName: create variable to share

  - job: santi_test_2
    displayName: santi test 2
    dependsOn: santi_test_1
    variables:
      santiVar2: $[ dependencies.santi_test_1.outputs['SANTI_GIT_COMMIT_SHORT_SHA'] ]
    steps:
      - script: |
          echo var: $(santiVar2)
        displayName: show shared variable
#        
#  - job: test
#    variables:
#      GIT_COMMIT_SHORT_SHA: value-set-below
#    steps:
#      - script: |
#          sourceVersion=$(Build.SourceVersion)
#          echo sourceVersion: $sourceVersion
#
#          shortSha=${sourceVersion:0:7}
#          echo shortSha: $shortSha
#
#          echo "##vso[task.setvariable variable=GIT_COMMIT_SHORT_SHA]$shortSha"
#        displayName: get commit short sha
#      - script: |
#          dotnet test ProviderApi/ProviderApi.Test/ProviderApi.Test.csproj --configuration Release
#        displayName: dotnet test
#        env:
#          CI: true
#          PACT_BROKER_BASE_URL: $(pact.broker.base.url)
#          PACT_BROKER_API_TOKEN: $(pact.broker.api.token)
#          PACT_PROVIDER_TAG: $(Build.SourceBranch)
#          GIT_COMMIT_SHORT_SHA: $(GIT_COMMIT_SHORT_SHA)
#          PROVIDER_FOO_API_BASE_URI: http://localhost:9333
#        
#  - job: can_i_deploy
#    displayName: can i deploy
#    dependsOn: test
#    services:
#      pact_cli: pact_cli
#    variables:
#      GIT_COMMIT_SHORT_SHA: value-set-below
#    steps:
#      - script: |
#          sourceVersion=$(Build.SourceVersion)
#          echo sourceVersion: $sourceVersion
#
#          shortSha=${sourceVersion:0:7}
#          echo shortSha: $shortSha
#
#          echo "##vso[task.setvariable variable=GIT_COMMIT_SHORT_SHA]$shortSha"
#        displayName: get commit short sha
#      - script: |
#          docker run --rm \
#            pactfoundation/pact-cli:latest \
#            broker can-i-deploy \
#            --pacticipant "Provider API" \
#            --version $GIT_COMMIT_SHORT_SHA \
#            --to dev \
#            --broker-base-url=$PACT_BROKER_BASE_URL \
#            --broker-token=$PACT_BROKER_API_TOKEN \
#            --verbose
#        displayName: pact-broker can-i-deploy
#        env:
#          PACT_BROKER_BASE_URL: $(pact.broker.base.url)
#          PACT_BROKER_API_TOKEN: $(pact.broker.api.token)
#          
#  - job: deploy
#    dependsOn: can_i_deploy
#    services:
#      pact_cli: pact_cli
#    variables:
#      GIT_COMMIT_SHORT_SHA: value-set-below
#    steps:
#      - script: |
#          echo fake deployment step that assumes deployment was successful
#        displayName: deploy (fake)
#      - script: |
#          sourceVersion=$(Build.SourceVersion)
#          echo sourceVersion: $sourceVersion
#
#          shortSha=${sourceVersion:0:7}
#          echo shortSha: $shortSha
#
#          echo "##vso[task.setvariable variable=GIT_COMMIT_SHORT_SHA]$shortSha"
#        displayName: get commit short sha        
#      - script: |
#          docker run --rm \
#            pactfoundation/pact-cli:latest \
#            broker create-version-tag \
#            --pacticipant "Provider API" \
#            --version $GIT_COMMIT_SHORT_SHA \
#            --tag dev \
#            --broker-base-url=$PACT_BROKER_BASE_URL \
#            --broker-token=$PACT_BROKER_API_TOKEN \
#            --verbose
#        displayName: pact-broker create-version-tag
#        env:
#          PACT_BROKER_BASE_URL: $(pact.broker.base.url)
#          PACT_BROKER_API_TOKEN: $(pact.broker.api.token)